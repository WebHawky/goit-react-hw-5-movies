{"version":3,"file":"static/js/909.a39f15eb.chunk.js","mappings":"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","sources":["Api/api.js","webpack://goit-react-hw-5-movies/./src/components/Btn/Btn.module.css?6cc6","components/Btn/Btn.jsx","webpack://goit-react-hw-5-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MoviesDetailsItem.jsx","views/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'eda1cd62ac56f17bba5191ebaf4fad10',\n  },\n});\n\nexport const getPopularMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getSearch = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const getMovieDetailes = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Btn_btn__YqyQj\",\"opacityFallbackOut\":\"Btn_opacityFallbackOut__9hWMg\",\"opacityFallbackIn\":\"Btn_opacityFallbackIn__6Ujfg\"};","import { useNavigate, useLocation } from 'react-router-dom';\nimport s from './Btn.module.css';\n\nexport default function Btn({ text }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  const goBack = () => navigate(from);\n  return (\n    <button className={s.btn} onClick={goBack}>\n      <span>{text}</span>\n    </button>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"MovieDetails_wrap__-7+5C\",\"title\":\"MovieDetails_title__RBndM\",\"desc\":\"MovieDetails_desc__3wF2C\",\"scores\":\"MovieDetails_scores__ZnggC\",\"overview\":\"MovieDetails_overview__EVogb\",\"genres\":\"MovieDetails_genres__80iSK\",\"genre\":\"MovieDetails_genre__cfw-I\",\"additionalTitle\":\"MovieDetails_additionalTitle__aFc09\",\"list\":\"MovieDetails_list__y5Rs9\"};","import PropTypes from 'prop-types';\nimport Btn from 'components/Btn/Btn';\n\nimport s from './MovieDetails.module.css';\n\nconst notFound = `https://www.peakpx.com/en/hd-wallpaper-desktop-arzfv`;\n\nconst src = url =>\n  url ? `https://image.tmdb.org/t/p/original${url}` : notFound;\n\nexport default function MoviesDetailsItem({ movie }) {\n  if (movie === null) {\n    return notFound;\n  }\n  const { poster_path, original_title, popularity, overview, genres } = movie;\n\n  const poster = src(poster_path);\n  const genresList = genres.map(({ name }) => name).join(', ');\n  //\n\n  return (\n    movie && (\n      <div className={s.wrap}>\n        <img src={poster} alt={original_title} width={'500px'} />\n\n        <div className={s.desc}>\n          <h2 className={s.title}>{original_title}</h2>\n          <h3 className={s.scores}>Users Scores: {popularity}%</h3>\n          <h3 className={s.overview}>Overview</h3>\n          <p className={s.overview}>{overview}</p>\n          <h3 className={s.genres}>Genres</h3>\n          <p className={s.genre}>{genresList}</p>\n          <Btn text=\"Go back\" />\n        </div>\n      </div>\n    )\n  );\n}\n\nMoviesDetailsItem.propTypes = {\n  movie: PropTypes.object,\n  poster_path: PropTypes.string,\n  original_title: PropTypes.string,\n  popularity: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetailes } from '../Api/api';\n\nimport MoviesDetailsItem from '../components/MovieDetails/MoviesDetailsItem';\nimport Loader from 'components/Loader/Loader';\nimport s from '../components/MovieDetails/MovieDetails.module.css';\n\nexport default function MoviesDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieDetailes(movieId)\n      .then(setMovie)\n      .catch(error => console.log(error))\n      .finally(setLoading(false));\n  }, [movieId]);\n\n  const location = useLocation();\n  const from = location.state?.from ?? '/';\n\n  return (\n    <main>\n      {loading && <Loader />}\n      <MoviesDetailsItem movie={movie} />\n\n      <h2 className={s.additionalTitle}>Additional information</h2>\n      <ul className={s.list}>\n        <li>\n          <Link state={{ from }} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link state={{ from }} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </main>\n  );\n}\n\nMoviesDetails.propTypes = {\n  movie: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string,\n      popularity: PropTypes.number,\n      overview: PropTypes.string,\n      genres: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number,\n          name: PropTypes.string,\n        })\n      ),\n    })\n  ),\n};\n"],"names":["instance","axios","baseURL","params","api_key","getPopularMovies","get","data","getSearch","query","getMovieDetailes","movieId","getMovieCredits","getMovieReviews","Btn","text","navigate","useNavigate","from","useLocation","state","className","s","onClick","notFound","MoviesDetailsItem","movie","url","poster_path","original_title","popularity","overview","genres","poster","genresList","map","name","join","src","alt","width","MoviesDetails","useParams","useState","setMovie","loading","setLoading","useEffect","then","catch","error","console","log","finally","Loader","to"],"sourceRoot":""}