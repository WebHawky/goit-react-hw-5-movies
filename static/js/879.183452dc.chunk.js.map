{"version":3,"file":"static/js/879.183452dc.chunk.js","mappings":"iTAEMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,wBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAS,mCAAG,WAAMC,GAAN,yFACAT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CAAEM,MAAAA,KAFW,uBACfF,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAOTG,EAAgB,mCAAG,WAAMC,GAAN,yFACPX,EAASM,IAAT,iBAAuBK,IADhB,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBK,EAAe,mCAAG,WAAMD,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,mIC3Bb,SAASO,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,OACE,eAAIC,UAAWC,EAAAA,EAAAA,KAAf,SACGF,GACCA,EAAKG,KAAI,WAAwCC,GAAxC,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACP,2BACE,gBACEP,UAAWC,EAAAA,EAAAA,IACXO,IACEF,EAAY,6CAC8BA,GAD9B,uDAIdG,IAAKJ,EACLK,MAAO,WAET,eAAIV,UAAWC,EAAAA,EAAAA,KAAf,SAAwBI,KACxB,eAAGL,UAAWC,EAAAA,EAAAA,KAAd,wBAAkCM,OAZpC,UAAYH,EAAZ,YAAkBD,GADX,KAkBhB,CCnBc,SAASQ,IACtB,IAAQhB,GAAYiB,EAAAA,EAAAA,MAAZjB,QACR,GAAwBkB,EAAAA,EAAAA,UAAS,IAAjC,eAAOd,EAAP,KAAae,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,IAAgBD,GACbqB,MAAK,SAAAC,GACJH,EAAQG,EAAOlB,KAChB,IACAmB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACxB,KAEF,+BACE,SAACG,EAAD,CAAUC,KAAMA,KAGrB,C,qBCtBD,KAAgB,KAAO,mBAAmB,IAAM,kBAAkB,MAAQ,oBAAoB,KAAO,mBAAmB,KAAO,mB","sources":["Api/api.js","components/Cast/CastItem.jsx","views/Cast.jsx","webpack://goit-react-hw-5-movies/./src/components/List/List.module.css?2bcc"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'eda1cd62ac56f17bba5191ebaf4fad10',\n  },\n});\n\nexport const getPopularMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\nexport const getSearch = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const getMovieDetailes = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n","import PropTypes from 'prop-types';\n\nimport s from '../List/List.module.css';\n\nexport default function CastItem({ cast }) {\n  return (\n    <ul className={s.list}>\n      {cast &&\n        cast.map(({ id, name, profile_path, character }, index) => (\n          <li key={`${id}-${index}`}>\n            <img\n              className={s.img}\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/original${profile_path}`\n                  : `https://www.peakpx.com/en/hd-wallpaper-desktop-arzfv`\n              }\n              alt={name}\n              width={'400px'}\n            />\n            <h3 className={s.name}>{name}</h3>\n            <p className={s.desc}>Character: {character}</p>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nCastItem.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  profile_path: PropTypes.string,\n  character: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../Api/api';\n\nimport CastItem from '../components/Cast/CastItem';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(result => {\n        setCast(result.cast);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n  return (\n    <>\n      <CastItem cast={cast} />\n    </>\n  );\n}\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      profile_path: PropTypes.string,\n      character: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"List_list__AK7hC\",\"img\":\"List_img__2KN-b\",\"title\":\"List_title__ZjuBo\",\"name\":\"List_name__AFBHu\",\"desc\":\"List_desc__ap3L+\"};"],"names":["instance","axios","baseURL","params","api_key","getPopularMovies","get","data","getSearch","query","getMovieDetailes","movieId","getMovieCredits","getMovieReviews","CastItem","cast","className","s","map","index","id","name","profile_path","character","src","alt","width","Cast","useParams","useState","setCast","useEffect","then","result","catch","error","console","log"],"sourceRoot":""}